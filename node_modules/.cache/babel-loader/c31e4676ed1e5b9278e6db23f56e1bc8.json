{"ast":null,"code":"var _jsxFileName = \"/Users/ste./Documents/Codes/OASIS/src/elements/Pop.js\";\nimport React from 'react';\nimport Popover from '@material-ui/core/Popover';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline';\nimport Button from '@material-ui/core/Button';\nexport default function Pop(props) {\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  const handleClick = event => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const open = Boolean(anchorEl);\n  const id = open ? 'simple-popover' : undefined;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    \"aria-describedby\": id,\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: handleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }, props.label), /*#__PURE__*/React.createElement(Popover, {\n    id: id,\n    open: open,\n    anchorEl: anchorEl,\n    anchorOrigin: {\n      vertical: 'center',\n      horizontal: 'center'\n    },\n    transformOrigin: {\n      vertical: 'center',\n      horizontal: 'center'\n    },\n    onClose: handleClose // disableRestoreFocus\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"terms-wrapper\",\n    onClick: handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, props.title, props.texts.map((x, i) => {\n    if (props.listIndex.indexOf(i) >= 0) return /*#__PURE__*/React.createElement(\"p\", {\n      key: i,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 24\n      }\n    }, \"\\u25CF \", x);else if (props.linkIndex.indexOf(i) >= 0) return /*#__PURE__*/React.createElement(\"a\", {\n      key: i,\n      href: x,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 24\n      }\n    }, x);else return /*#__PURE__*/React.createElement(\"p\", {\n      key: i,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 24\n      }\n    }, x);\n  }))));\n}","map":{"version":3,"sources":["/Users/ste./Documents/Codes/OASIS/src/elements/Pop.js"],"names":["React","Popover","Typography","makeStyles","ErrorOutlineIcon","Button","Pop","props","anchorEl","setAnchorEl","useState","handleClick","event","currentTarget","handleClose","open","Boolean","id","undefined","label","vertical","horizontal","title","texts","map","x","i","listIndex","indexOf","linkIndex"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,gBAAP,MAA6B,iCAA7B;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AAEA,eAAe,SAASC,GAAT,CAAaC,KAAb,EAAoB;AAEjC,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BT,KAAK,CAACU,QAAN,CAAe,IAAf,CAAhC;;AAEA,QAAMC,WAAW,GAAIC,KAAD,IAAW;AAC7BH,IAAAA,WAAW,CAACG,KAAK,CAACC,aAAP,CAAX;AACD,GAFD;;AAIA,QAAMC,WAAW,GAAG,MAAM;AACxBL,IAAAA,WAAW,CAAC,IAAD,CAAX;AACD,GAFD;;AAIA,QAAMM,IAAI,GAAGC,OAAO,CAACR,QAAD,CAApB;AACA,QAAMS,EAAE,GAAGF,IAAI,GAAG,gBAAH,GAAsBG,SAArC;AAEA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,wBAAkBD,EAAvB;AAA2B,IAAA,OAAO,EAAC,WAAnC;AAA+C,IAAA,KAAK,EAAC,SAArD;AAA+D,IAAA,OAAO,EAAEN,WAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAsFJ,KAAK,CAACY,KAA5F,CADF,eAME,oBAAC,OAAD;AACE,IAAA,EAAE,EAAEF,EADN;AAEE,IAAA,IAAI,EAAEF,IAFR;AAGE,IAAA,QAAQ,EAAEP,QAHZ;AAIE,IAAA,YAAY,EAAE;AACZY,MAAAA,QAAQ,EAAE,QADE;AAEZC,MAAAA,UAAU,EAAE;AAFA,KAJhB;AAQE,IAAA,eAAe,EAAE;AACfD,MAAAA,QAAQ,EAAE,QADK;AAEfC,MAAAA,UAAU,EAAE;AAFG,KARnB;AAYE,IAAA,OAAO,EAAEP,WAZX,CAaE;AAbF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAeE;AAAK,IAAA,SAAS,EAAC,eAAf;AAA+B,IAAA,OAAO,EAAEA,WAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGP,KAAK,CAACe,KADT,EAGKf,KAAK,CAACgB,KAAN,CAAYC,GAAZ,CAAgB,CAACC,CAAD,EAAIC,CAAJ,KAAU;AACzB,QAAInB,KAAK,CAACoB,SAAN,CAAgBC,OAAhB,CAAwBF,CAAxB,KAA8B,CAAlC,EACE,oBAAO;AAAG,MAAA,GAAG,EAAEA,CAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAcD,CAAd,CAAP,CADF,KAEK,IAAIlB,KAAK,CAACsB,SAAN,CAAgBD,OAAhB,CAAwBF,CAAxB,KAA8B,CAAlC,EACH,oBAAO;AAAG,MAAA,GAAG,EAAEA,CAAR;AAAW,MAAA,IAAI,EAAED,CAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAqBA,CAArB,CAAP,CADG,KAGH,oBAAO;AAAG,MAAA,GAAG,EAAEC,CAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAYD,CAAZ,CAAP;AACH,GAPA,CAHL,CAfF,CANF,CADF;AAsCD","sourcesContent":["import React from 'react';\nimport Popover from '@material-ui/core/Popover';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline';\nimport Button from '@material-ui/core/Button';\n\nexport default function Pop(props) {\n  \n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const open = Boolean(anchorEl);\n  const id = open ? 'simple-popover' : undefined;\n  \n  return (\n    <div>\n      <div aria-describedby={id} variant=\"contained\" color=\"primary\" onClick={handleClick}>{props.label}</div>\n      {/* <ErrorOutlineIcon  aria-owns={open ? 'mouse-over-popover' : undefined}\n        aria-haspopup=\"true\"\n        onMouseEnter={handlePopoverOpen}\n        onMouseLeave={handlePopoverClose}></ErrorOutlineIcon> */}\n      <Popover\n        id={id}\n        open={open}\n        anchorEl={anchorEl}\n        anchorOrigin={{\n          vertical: 'center',\n          horizontal: 'center',\n        }}\n        transformOrigin={{\n          vertical: 'center',\n          horizontal: 'center',\n        }}\n        onClose={handleClose}\n        // disableRestoreFocus\n      >\n        <div className=\"terms-wrapper\" onClick={handleClose}>\n          {props.title}\n          \n            {props.texts.map((x, i) => {\n              if (props.listIndex.indexOf(i) >= 0)\n                return <p key={i}>‚óè {x}</p>\n              else if (props.linkIndex.indexOf(i) >= 0)\n                return <a key={i} href={x}>{x}</a>\n              else\n                return <p key={i}>{x}</p>\n            })\n          }\n        </div>\n      </Popover>\n    </div>\n  );\n}"]},"metadata":{},"sourceType":"module"}