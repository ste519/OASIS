{"ast":null,"code":"var _jsxFileName = \"/Users/ste./Documents/Codes/OASIS/src/elements/Map.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport mapboxgl from 'mapbox-gl';\nmapboxgl.accessToken = 'pk.eyJ1Ijoic3RlNTE5IiwiYSI6ImNrOHc1aHlvYTB0N2ozam51MHFiazE3bmcifQ.AHtFuA-pAqau_AJIy-hzOg';\nexport default class Application extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      lng: 5,\n      lat: 34,\n      zoom: 2\n    };\n  }\n\n  componentDidMount() {\n    var map = new mapboxgl.Map({\n      container: 'map',\n      style: 'mapbox://styles/mapbox/light-v10',\n      center: [-99.9, 41.5],\n      zoom: 3\n    });\n    var stateToFIPS = {\n      \"AK\": \"02\",\n      \"AL\": \"01\",\n      \"AR\": \"05\",\n      \"AS\": \"60\",\n      \"AZ\": \"04\",\n      \"CA\": \"06\",\n      \"CO\": \"08\",\n      \"CT\": \"09\",\n      \"DC\": \"11\",\n      \"DE\": \"10\",\n      \"FL\": \"12\",\n      \"GA\": \"13\",\n      \"GU\": \"66\",\n      \"HI\": \"15\",\n      \"IA\": \"19\",\n      \"ID\": \"16\",\n      \"IL\": \"17\",\n      \"IN\": \"18\",\n      \"KS\": \"20\",\n      \"KY\": \"21\",\n      \"LA\": \"22\",\n      \"MA\": \"25\",\n      \"MD\": \"24\",\n      \"ME\": \"23\",\n      \"MI\": \"26\",\n      \"MN\": \"27\",\n      \"MO\": \"29\",\n      \"MS\": \"28\",\n      \"MT\": \"30\",\n      \"NC\": \"37\",\n      \"ND\": \"38\",\n      \"NE\": \"31\",\n      \"NH\": \"33\",\n      \"NJ\": \"34\",\n      \"NM\": \"35\",\n      \"NV\": \"32\",\n      \"NY\": \"36\",\n      \"OH\": \"39\",\n      \"OK\": \"40\",\n      \"OR\": \"41\",\n      \"PA\": \"42\",\n      \"PR\": \"72\",\n      \"RI\": \"44\",\n      \"SC\": \"45\",\n      \"SD\": \"46\",\n      \"TN\": \"47\",\n      \"TX\": \"48\",\n      \"UT\": \"49\",\n      \"VA\": \"51\",\n      \"VI\": \"78\",\n      \"VT\": \"50\",\n      \"WA\": \"53\",\n      \"WI\": \"55\",\n      \"WV\": \"54\",\n      \"WY\": \"56\"\n    };\n    var data = {};\n    var url = \"https://covidtracking.com/api/states\";\n    fetch(url).then(resp => resp.json()).then(function (dat) {\n      data = dat;\n      console.log(dat);\n    }).catch(function (error) {\n      console.log(error);\n    });\n    map.on('load', function () {\n      // Add source for state polygons hosted on Mapbox, based on US Census Data:\n      // https://www.census.gov/geo/maps-data/data/cbf/cbf_state.html\n      map.addSource('states', {\n        type: 'vector',\n        url: 'mapbox://mapbox.us_census_states_2015'\n      }); // exclude states outside the 50 states\n\n      var expression = ['match', ['get', 'STATE_ID']]; // var maxValue= data.reduce((max,b) => Math.max(max, b.death), data[0].death);\n\n      var normalizerValue = 5000;\n      data.forEach(function (row) {\n        var stateID = row.state;\n\n        if (stateID in stateToFIPS) {\n          var red = row.death / normalizerValue * 255;\n          var color = 'rgba(' + red + ', ' + 0 + ', ' + 0 + ', 1)';\n          expression.push(stateToFIPS[stateID], color);\n        }\n      }); // Last value is the default, used where there is no data\n\n      expression.push('rgba(0,0,0,0)');\n      var zoomThreshold = 4; // Add layer from the vector tile source with data-driven style\n\n      map.addLayer({\n        'id': 'states-join',\n        'type': 'fill',\n        'source': 'states',\n        'maxzoom': zoomThreshold,\n        'source-layer': 'states',\n        'paint': {\n          'fill-color': expression\n        }\n      }, 'waterway-label');\n      /*----------------------------  County Level Data ----------------------------------*/\n\n      var countyData = {};\n      var url = \"http://13.57.220.143/getcounty\";\n      fetch(url, {\n        method: 'post'\n      }).then(resp => resp.json()).then(function (data) {\n        countyData = data;\n        console.log(data);\n      }).catch(function (error) {\n        console.log(error);\n      }); // TODO: I need help making this URL fetch work\n      // countyData=[{\"deaths\": 69, \"county\": \"Alameda\", \"state\": \"California\", \"fips\": \"06001\", \"date\": \"2020-05-06\", \"cases\": 1884}, {\"deaths\": 0, \"county\": \"Alpine\", \"state\": \"California\", \"fips\": \"06003\", \"date\": \"2020-05-06\", \"cases\": 2}, {\"deaths\": 0, \"county\": \"Amador\", \"state\": \"California\", \"fips\": \"06005\", \"date\": \"2020-05-06\", \"cases\": 7}, {\"deaths\": 0, \"county\": \"Butte\", \"state\": \"California\", \"fips\": \"06007\", \"date\": \"2020-05-06\", \"cases\": 19}, {\"deaths\": 0, \"county\": \"Calaveras\", \"state\": \"California\", \"fips\": \"06009\", \"date\": \"2020-05-06\", \"cases\": 13}, {\"deaths\": 0, \"county\": \"Colusa\", \"state\": \"California\", \"fips\": \"06011\", \"date\": \"2020-05-06\", \"cases\": 3}, {\"deaths\": 29, \"county\": \"Contra Costa\", \"state\": \"California\", \"fips\": \"06013\", \"date\": \"2020-05-06\", \"cases\": 985}, {\"deaths\": 0, \"county\": \"Del Norte\", \"state\": \"California\", \"fips\": \"06015\", \"date\": \"2020-05-06\", \"cases\": 3}, {\"deaths\": 0, \"county\": \"El Dorado\", \"state\": \"California\", \"fips\": \"06017\", \"date\": \"2020-05-06\", \"cases\": 54}, {\"deaths\": 9, \"county\": \"Fresno\", \"state\": \"California\", \"fips\": \"06019\", \"date\": \"2020-05-06\", \"cases\": 777}, {\"deaths\": 0, \"county\": \"Glenn\", \"state\": \"California\", \"fips\": \"06021\", \"date\": \"2020-05-06\", \"cases\": 5}, {\"deaths\": 0, \"county\": \"Humboldt\", \"state\": \"California\", \"fips\": \"06023\", \"date\": \"2020-05-06\", \"cases\": 55}, {\"deaths\": 8, \"county\": \"Imperial\", \"state\": \"California\", \"fips\": \"06025\", \"date\": \"2020-05-06\", \"cases\": 419}, {\"deaths\": 1, \"county\": \"Inyo\", \"state\": \"California\", \"fips\": \"06027\", \"date\": \"2020-05-06\", \"cases\": 20}, {\"deaths\": 11, \"county\": \"Kern\", \"state\": \"California\", \"fips\": \"06029\", \"date\": \"2020-05-06\", \"cases\": 1084}, {\"deaths\": 1, \"county\": \"Kings\", \"state\": \"California\", \"fips\": \"06031\", \"date\": \"2020-05-06\", \"cases\": 233}, {\"deaths\": 0, \"county\": \"Lake\", \"state\": \"California\", \"fips\": \"06033\", \"date\": \"2020-05-06\", \"cases\": 8}, {\"deaths\": 1367, \"county\": \"Los Angeles\", \"state\": \"California\", \"fips\": \"06037\", \"date\": \"2020-05-06\", \"cases\": 28644}, {\"deaths\": 2, \"county\": \"Madera\", \"state\": \"California\", \"fips\": \"06039\", \"date\": \"2020-05-06\", \"cases\": 55}, {\"deaths\": 14, \"county\": \"Marin\", \"state\": \"California\", \"fips\": \"06041\", \"date\": \"2020-05-06\", \"cases\": 244}, {\"deaths\": 0, \"county\": \"Mariposa\", \"state\": \"California\", \"fips\": \"06043\", \"date\": \"2020-05-06\", \"cases\": 15}, {\"deaths\": 0, \"county\": \"Mendocino\", \"state\": \"California\", \"fips\": \"06045\", \"date\": \"2020-05-06\", \"cases\": 40}, {\"deaths\": 3, \"county\": \"Merced\", \"state\": \"California\", \"fips\": \"06047\", \"date\": \"2020-05-06\", \"cases\": 152}, {\"deaths\": 1, \"county\": \"Mono\", \"state\": \"California\", \"fips\": \"06051\", \"date\": \"2020-05-06\", \"cases\": 27}, {\"deaths\": 6, \"county\": \"Monterey\", \"state\": \"California\", \"fips\": \"06053\", \"date\": \"2020-05-06\", \"cases\": 240}, {\"deaths\": 2, \"county\": \"Napa\", \"state\": \"California\", \"fips\": \"06055\", \"date\": \"2020-05-06\", \"cases\": 79}, {\"deaths\": 1, \"county\": \"Nevada\", \"state\": \"California\", \"fips\": \"06057\", \"date\": \"2020-05-06\", \"cases\": 41}, {\"deaths\": 65, \"county\": \"Orange\", \"state\": \"California\", \"fips\": \"06059\", \"date\": \"2020-05-06\", \"cases\": 3041}, {\"deaths\": 8, \"county\": \"Placer\", \"state\": \"California\", \"fips\": \"06061\", \"date\": \"2020-05-06\", \"cases\": 163}, {\"deaths\": 0, \"county\": \"Plumas\", \"state\": \"California\", \"fips\": \"06063\", \"date\": \"2020-05-06\", \"cases\": 4}, {\"deaths\": 190, \"county\": \"Riverside\", \"state\": \"California\", \"fips\": \"06065\", \"date\": \"2020-05-06\", \"cases\": 4672}, {\"deaths\": 47, \"county\": \"Sacramento\", \"state\": \"California\", \"fips\": \"06067\", \"date\": \"2020-05-06\", \"cases\": 1132}, {\"deaths\": 2, \"county\": \"San Benito\", \"state\": \"California\", \"fips\": \"06069\", \"date\": \"2020-05-06\", \"cases\": 53}, {\"deaths\": 104, \"county\": \"San Bernardino\", \"state\": \"California\", \"fips\": \"06071\", \"date\": \"2020-05-06\", \"cases\": 2432}, {\"deaths\": 173, \"county\": \"San Diego\", \"state\": \"California\", \"fips\": \"06073\", \"date\": \"2020-05-06\", \"cases\": 4382}, {\"deaths\": 31, \"county\": \"San Francisco\", \"state\": \"California\", \"fips\": \"06075\", \"date\": \"2020-05-06\", \"cases\": 1779}, {\"deaths\": 27, \"county\": \"San Joaquin\", \"state\": \"California\", \"fips\": \"06077\", \"date\": \"2020-05-06\", \"cases\": 579}, {\"deaths\": 1, \"county\": \"San Luis Obispo\", \"state\": \"California\", \"fips\": \"06079\", \"date\": \"2020-05-06\", \"cases\": 208}, {\"deaths\": 56, \"county\": \"San Mateo\", \"state\": \"California\", \"fips\": \"06081\", \"date\": \"2020-05-06\", \"cases\": 1341}, {\"deaths\": 10, \"county\": \"Santa Barbara\", \"state\": \"California\", \"fips\": \"06083\", \"date\": \"2020-05-06\", \"cases\": 613}, {\"deaths\": 122, \"county\": \"Santa Clara\", \"state\": \"California\", \"fips\": \"06085\", \"date\": \"2020-05-06\", \"cases\": 2268}, {\"deaths\": 2, \"county\": \"Santa Cruz\", \"state\": \"California\", \"fips\": \"06087\", \"date\": \"2020-05-06\", \"cases\": 138}, {\"deaths\": 4, \"county\": \"Shasta\", \"state\": \"California\", \"fips\": \"06089\", \"date\": \"2020-05-06\", \"cases\": 31}, {\"deaths\": 0, \"county\": \"Siskiyou\", \"state\": \"California\", \"fips\": \"06093\", \"date\": \"2020-05-06\", \"cases\": 5}, {\"deaths\": 7, \"county\": \"Solano\", \"state\": \"California\", \"fips\": \"06095\", \"date\": \"2020-05-06\", \"cases\": 342}, {\"deaths\": 4, \"county\": \"Sonoma\", \"state\": \"California\", \"fips\": \"06097\", \"date\": \"2020-05-06\", \"cases\": 286}, {\"deaths\": 17, \"county\": \"Stanislaus\", \"state\": \"California\", \"fips\": \"06099\", \"date\": \"2020-05-06\", \"cases\": 461}, {\"deaths\": 2, \"county\": \"Sutter\", \"state\": \"California\", \"fips\": \"06101\", \"date\": \"2020-05-06\", \"cases\": 31}, {\"deaths\": 1, \"county\": \"Tehama\", \"state\": \"California\", \"fips\": \"06103\", \"date\": \"2020-05-06\", \"cases\": 1}, {\"deaths\": 41, \"county\": \"Tulare\", \"state\": \"California\", \"fips\": \"06107\", \"date\": \"2020-05-06\", \"cases\": 916}, {\"deaths\": 0, \"county\": \"Tuolumne\", \"state\": \"California\", \"fips\": \"06109\", \"date\": \"2020-05-06\", \"cases\": 2}, {\"deaths\": 19, \"county\": \"Ventura\", \"state\": \"California\", \"fips\": \"06111\", \"date\": \"2020-05-06\", \"cases\": 608}, {\"deaths\": 20, \"county\": \"Yolo\", \"state\": \"California\", \"fips\": \"06113\", \"date\": \"2020-05-06\", \"cases\": 172}, {\"deaths\": 1, \"county\": \"Yuba\", \"state\": \"California\", \"fips\": \"06115\", \"date\": \"2020-05-06\", \"cases\": 19}];\n\n      var values = countyData.map(function (county) {\n        return county.deaths;\n      }); //get all the death data points\n\n      var colorScale = chroma.scale(['black', 'red']).padding(0.15).domain(values, \"q\", 5);\n\n      function getColor(val) {\n        return colorScale(val).hex();\n      }\n\n      var colors = {};\n      countyData.forEach(function (county) {\n        var GEOID = county.fips;\n        var value = county.deaths;\n        var color = getColor(value);\n\n        if (!colors[color]) {\n          colors[color] = [];\n        }\n\n        colors[color].push(GEOID);\n      });\n      var colorExpression = [\"match\", [\"get\", \"GEOID\"]];\n      var colorQuantiles = Object.entries(colors).forEach(function ([color, GEOIDs]) {\n        colorExpression.push(GEOIDs, color);\n      });\n      colorExpression.push(\"rgba(0,0,0,0)\");\n      map.addLayer({\n        id: \"counties\",\n        type: \"fill\",\n        minzoom: zoomThreshold,\n        source: {\n          type: \"vector\",\n          tiles: [\"https://gis-server.data.census.gov/arcgis/rest/services/Hosted/VT_2017_050_00_PY_D1/VectorTileServer/tile/{z}/{y}/{x}.pbf\"]\n        },\n        \"source-layer\": \"County\",\n        paint: {\n          \"fill-opacity\": 0.6,\n          \"fill-color\": colorExpression\n        }\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"map\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/ste./Documents/Codes/OASIS/src/elements/Map.js"],"names":["React","ReactDOM","mapboxgl","accessToken","Application","Component","constructor","props","state","lng","lat","zoom","componentDidMount","map","Map","container","style","center","stateToFIPS","data","url","fetch","then","resp","json","dat","console","log","catch","error","on","addSource","type","expression","normalizerValue","forEach","row","stateID","red","death","color","push","zoomThreshold","addLayer","countyData","method","values","county","deaths","colorScale","chroma","scale","padding","domain","getColor","val","hex","colors","GEOID","fips","value","colorExpression","colorQuantiles","Object","entries","GEOIDs","id","minzoom","source","tiles","paint","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport mapboxgl from 'mapbox-gl';\n\nmapboxgl.accessToken = 'pk.eyJ1Ijoic3RlNTE5IiwiYSI6ImNrOHc1aHlvYTB0N2ozam51MHFiazE3bmcifQ.AHtFuA-pAqau_AJIy-hzOg';\n\nexport default class Application extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            lng: 5,\n            lat: 34,\n            zoom: 2\n        };\n    }\n    componentDidMount() {\n        var map = new mapboxgl.Map({\n            container: 'map',\n            style: 'mapbox://styles/mapbox/light-v10',\n            center: [-99.9, 41.5],\n            zoom: 3\n            });\n            \n            var stateToFIPS = {\n              \"AK\": \"02\",\n              \"AL\": \"01\",\n              \"AR\": \"05\",\n              \"AS\": \"60\",\n              \"AZ\": \"04\",\n              \"CA\": \"06\",\n              \"CO\": \"08\",\n              \"CT\": \"09\",\n              \"DC\": \"11\",\n              \"DE\": \"10\",\n              \"FL\": \"12\",\n              \"GA\": \"13\",\n              \"GU\": \"66\",\n              \"HI\": \"15\",\n              \"IA\": \"19\",\n              \"ID\": \"16\",\n              \"IL\": \"17\",\n              \"IN\": \"18\",\n              \"KS\": \"20\",\n              \"KY\": \"21\",\n              \"LA\": \"22\",\n              \"MA\": \"25\",\n              \"MD\": \"24\",\n              \"ME\": \"23\",\n              \"MI\": \"26\",\n              \"MN\": \"27\",\n              \"MO\": \"29\",\n              \"MS\": \"28\",\n              \"MT\": \"30\",\n              \"NC\": \"37\",\n              \"ND\": \"38\",\n              \"NE\": \"31\",\n              \"NH\": \"33\",\n              \"NJ\": \"34\",\n              \"NM\": \"35\",\n              \"NV\": \"32\",\n              \"NY\": \"36\",\n              \"OH\": \"39\",\n              \"OK\": \"40\",\n              \"OR\": \"41\",\n              \"PA\": \"42\",\n              \"PR\": \"72\",\n              \"RI\": \"44\",\n              \"SC\": \"45\",\n              \"SD\": \"46\",\n              \"TN\": \"47\",\n              \"TX\": \"48\",\n              \"UT\": \"49\",\n              \"VA\": \"51\",\n              \"VI\": \"78\",\n              \"VT\": \"50\",\n              \"WA\": \"53\",\n              \"WI\": \"55\",\n              \"WV\": \"54\",\n              \"WY\": \"56\"\n            }\n            \n            var data ={}\n            var url =\"https://covidtracking.com/api/states\";\n            fetch(url).then((resp) => resp.json())\n              .then(function(dat) {\n                data=dat;\n                console.log(dat);\n              })\n              .catch(function(error) {\n                console.log(error);\n            });\n            \n            \n            map.on('load', function() {\n            // Add source for state polygons hosted on Mapbox, based on US Census Data:\n            // https://www.census.gov/geo/maps-data/data/cbf/cbf_state.html\n            map.addSource('states', {\n            type: 'vector',\n            url: 'mapbox://mapbox.us_census_states_2015'\n            });\n            \n             \n            // exclude states outside the 50 states\n            var expression = ['match', ['get', 'STATE_ID']];\n            // var maxValue= data.reduce((max,b) => Math.max(max, b.death), data[0].death);\n            var normalizerValue = 5000;\n            data.forEach(function(row){\n                var stateID = row.state;\n                if (stateID in stateToFIPS){\n                    var red = (row.death / normalizerValue) * 255;\n                    var color = 'rgba(' + red + ', ' + 0 + ', ' + 0 + ', 1)';\n                    expression.push(stateToFIPS[stateID], color);\n                }\n            });\n            \n            \n            // Last value is the default, used where there is no data\n            expression.push('rgba(0,0,0,0)');\n             \n            var zoomThreshold = 4;\n            // Add layer from the vector tile source with data-driven style\n            map.addLayer(\n            {\n            'id': 'states-join',\n            'type': 'fill',\n            'source': 'states',\n            'maxzoom': zoomThreshold,\n            'source-layer': 'states',\n            'paint': {\n            'fill-color': expression\n            }\n            },\n            'waterway-label'\n            );\n            \n            /*----------------------------  County Level Data ----------------------------------*/\n            \n            var countyData ={}\n            var url =\"http://13.57.220.143/getcounty\";\n            fetch(url,{ method: 'post'}).then((resp) => resp.json())\n              .then(function(data) {\n                countyData=data;\n                console.log(data);\n              })\n              .catch(function(error) {\n                console.log(error);\n              });\n            // TODO: I need help making this URL fetch work\n            \n            // countyData=[{\"deaths\": 69, \"county\": \"Alameda\", \"state\": \"California\", \"fips\": \"06001\", \"date\": \"2020-05-06\", \"cases\": 1884}, {\"deaths\": 0, \"county\": \"Alpine\", \"state\": \"California\", \"fips\": \"06003\", \"date\": \"2020-05-06\", \"cases\": 2}, {\"deaths\": 0, \"county\": \"Amador\", \"state\": \"California\", \"fips\": \"06005\", \"date\": \"2020-05-06\", \"cases\": 7}, {\"deaths\": 0, \"county\": \"Butte\", \"state\": \"California\", \"fips\": \"06007\", \"date\": \"2020-05-06\", \"cases\": 19}, {\"deaths\": 0, \"county\": \"Calaveras\", \"state\": \"California\", \"fips\": \"06009\", \"date\": \"2020-05-06\", \"cases\": 13}, {\"deaths\": 0, \"county\": \"Colusa\", \"state\": \"California\", \"fips\": \"06011\", \"date\": \"2020-05-06\", \"cases\": 3}, {\"deaths\": 29, \"county\": \"Contra Costa\", \"state\": \"California\", \"fips\": \"06013\", \"date\": \"2020-05-06\", \"cases\": 985}, {\"deaths\": 0, \"county\": \"Del Norte\", \"state\": \"California\", \"fips\": \"06015\", \"date\": \"2020-05-06\", \"cases\": 3}, {\"deaths\": 0, \"county\": \"El Dorado\", \"state\": \"California\", \"fips\": \"06017\", \"date\": \"2020-05-06\", \"cases\": 54}, {\"deaths\": 9, \"county\": \"Fresno\", \"state\": \"California\", \"fips\": \"06019\", \"date\": \"2020-05-06\", \"cases\": 777}, {\"deaths\": 0, \"county\": \"Glenn\", \"state\": \"California\", \"fips\": \"06021\", \"date\": \"2020-05-06\", \"cases\": 5}, {\"deaths\": 0, \"county\": \"Humboldt\", \"state\": \"California\", \"fips\": \"06023\", \"date\": \"2020-05-06\", \"cases\": 55}, {\"deaths\": 8, \"county\": \"Imperial\", \"state\": \"California\", \"fips\": \"06025\", \"date\": \"2020-05-06\", \"cases\": 419}, {\"deaths\": 1, \"county\": \"Inyo\", \"state\": \"California\", \"fips\": \"06027\", \"date\": \"2020-05-06\", \"cases\": 20}, {\"deaths\": 11, \"county\": \"Kern\", \"state\": \"California\", \"fips\": \"06029\", \"date\": \"2020-05-06\", \"cases\": 1084}, {\"deaths\": 1, \"county\": \"Kings\", \"state\": \"California\", \"fips\": \"06031\", \"date\": \"2020-05-06\", \"cases\": 233}, {\"deaths\": 0, \"county\": \"Lake\", \"state\": \"California\", \"fips\": \"06033\", \"date\": \"2020-05-06\", \"cases\": 8}, {\"deaths\": 1367, \"county\": \"Los Angeles\", \"state\": \"California\", \"fips\": \"06037\", \"date\": \"2020-05-06\", \"cases\": 28644}, {\"deaths\": 2, \"county\": \"Madera\", \"state\": \"California\", \"fips\": \"06039\", \"date\": \"2020-05-06\", \"cases\": 55}, {\"deaths\": 14, \"county\": \"Marin\", \"state\": \"California\", \"fips\": \"06041\", \"date\": \"2020-05-06\", \"cases\": 244}, {\"deaths\": 0, \"county\": \"Mariposa\", \"state\": \"California\", \"fips\": \"06043\", \"date\": \"2020-05-06\", \"cases\": 15}, {\"deaths\": 0, \"county\": \"Mendocino\", \"state\": \"California\", \"fips\": \"06045\", \"date\": \"2020-05-06\", \"cases\": 40}, {\"deaths\": 3, \"county\": \"Merced\", \"state\": \"California\", \"fips\": \"06047\", \"date\": \"2020-05-06\", \"cases\": 152}, {\"deaths\": 1, \"county\": \"Mono\", \"state\": \"California\", \"fips\": \"06051\", \"date\": \"2020-05-06\", \"cases\": 27}, {\"deaths\": 6, \"county\": \"Monterey\", \"state\": \"California\", \"fips\": \"06053\", \"date\": \"2020-05-06\", \"cases\": 240}, {\"deaths\": 2, \"county\": \"Napa\", \"state\": \"California\", \"fips\": \"06055\", \"date\": \"2020-05-06\", \"cases\": 79}, {\"deaths\": 1, \"county\": \"Nevada\", \"state\": \"California\", \"fips\": \"06057\", \"date\": \"2020-05-06\", \"cases\": 41}, {\"deaths\": 65, \"county\": \"Orange\", \"state\": \"California\", \"fips\": \"06059\", \"date\": \"2020-05-06\", \"cases\": 3041}, {\"deaths\": 8, \"county\": \"Placer\", \"state\": \"California\", \"fips\": \"06061\", \"date\": \"2020-05-06\", \"cases\": 163}, {\"deaths\": 0, \"county\": \"Plumas\", \"state\": \"California\", \"fips\": \"06063\", \"date\": \"2020-05-06\", \"cases\": 4}, {\"deaths\": 190, \"county\": \"Riverside\", \"state\": \"California\", \"fips\": \"06065\", \"date\": \"2020-05-06\", \"cases\": 4672}, {\"deaths\": 47, \"county\": \"Sacramento\", \"state\": \"California\", \"fips\": \"06067\", \"date\": \"2020-05-06\", \"cases\": 1132}, {\"deaths\": 2, \"county\": \"San Benito\", \"state\": \"California\", \"fips\": \"06069\", \"date\": \"2020-05-06\", \"cases\": 53}, {\"deaths\": 104, \"county\": \"San Bernardino\", \"state\": \"California\", \"fips\": \"06071\", \"date\": \"2020-05-06\", \"cases\": 2432}, {\"deaths\": 173, \"county\": \"San Diego\", \"state\": \"California\", \"fips\": \"06073\", \"date\": \"2020-05-06\", \"cases\": 4382}, {\"deaths\": 31, \"county\": \"San Francisco\", \"state\": \"California\", \"fips\": \"06075\", \"date\": \"2020-05-06\", \"cases\": 1779}, {\"deaths\": 27, \"county\": \"San Joaquin\", \"state\": \"California\", \"fips\": \"06077\", \"date\": \"2020-05-06\", \"cases\": 579}, {\"deaths\": 1, \"county\": \"San Luis Obispo\", \"state\": \"California\", \"fips\": \"06079\", \"date\": \"2020-05-06\", \"cases\": 208}, {\"deaths\": 56, \"county\": \"San Mateo\", \"state\": \"California\", \"fips\": \"06081\", \"date\": \"2020-05-06\", \"cases\": 1341}, {\"deaths\": 10, \"county\": \"Santa Barbara\", \"state\": \"California\", \"fips\": \"06083\", \"date\": \"2020-05-06\", \"cases\": 613}, {\"deaths\": 122, \"county\": \"Santa Clara\", \"state\": \"California\", \"fips\": \"06085\", \"date\": \"2020-05-06\", \"cases\": 2268}, {\"deaths\": 2, \"county\": \"Santa Cruz\", \"state\": \"California\", \"fips\": \"06087\", \"date\": \"2020-05-06\", \"cases\": 138}, {\"deaths\": 4, \"county\": \"Shasta\", \"state\": \"California\", \"fips\": \"06089\", \"date\": \"2020-05-06\", \"cases\": 31}, {\"deaths\": 0, \"county\": \"Siskiyou\", \"state\": \"California\", \"fips\": \"06093\", \"date\": \"2020-05-06\", \"cases\": 5}, {\"deaths\": 7, \"county\": \"Solano\", \"state\": \"California\", \"fips\": \"06095\", \"date\": \"2020-05-06\", \"cases\": 342}, {\"deaths\": 4, \"county\": \"Sonoma\", \"state\": \"California\", \"fips\": \"06097\", \"date\": \"2020-05-06\", \"cases\": 286}, {\"deaths\": 17, \"county\": \"Stanislaus\", \"state\": \"California\", \"fips\": \"06099\", \"date\": \"2020-05-06\", \"cases\": 461}, {\"deaths\": 2, \"county\": \"Sutter\", \"state\": \"California\", \"fips\": \"06101\", \"date\": \"2020-05-06\", \"cases\": 31}, {\"deaths\": 1, \"county\": \"Tehama\", \"state\": \"California\", \"fips\": \"06103\", \"date\": \"2020-05-06\", \"cases\": 1}, {\"deaths\": 41, \"county\": \"Tulare\", \"state\": \"California\", \"fips\": \"06107\", \"date\": \"2020-05-06\", \"cases\": 916}, {\"deaths\": 0, \"county\": \"Tuolumne\", \"state\": \"California\", \"fips\": \"06109\", \"date\": \"2020-05-06\", \"cases\": 2}, {\"deaths\": 19, \"county\": \"Ventura\", \"state\": \"California\", \"fips\": \"06111\", \"date\": \"2020-05-06\", \"cases\": 608}, {\"deaths\": 20, \"county\": \"Yolo\", \"state\": \"California\", \"fips\": \"06113\", \"date\": \"2020-05-06\", \"cases\": 172}, {\"deaths\": 1, \"county\": \"Yuba\", \"state\": \"California\", \"fips\": \"06115\", \"date\": \"2020-05-06\", \"cases\": 19}];\n            \n              var values = countyData.map(function(county) {\n                return county.deaths;\n              }); //get all the death data points\n              \n              var colorScale = chroma\n                .scale(['black', 'red'])\n                .padding(0.15)\n                .domain(values, \"q\", 5);\n              \n              function getColor(val) {\n                return colorScale(val).hex();\n              }\n            \n              var colors = {};\n            \n            countyData.forEach(function(county) {\n              var GEOID = county.fips;\n              var value = county.deaths;\n              var color = getColor(value);\n              if (!colors[color]) {\n                colors[color] = [];\n              }\n              colors[color].push(GEOID);\n            });\n            \n            var colorExpression = [\"match\", [\"get\", \"GEOID\"]];\n            var colorQuantiles = Object.entries(colors).forEach(function([color, GEOIDs]) {\n              colorExpression.push(GEOIDs, color);\n            });\n            \n            colorExpression.push(\"rgba(0,0,0,0)\");\n            \n            map.addLayer({\n                id: \"counties\",\n                type: \"fill\",\n                minzoom: zoomThreshold,\n                source: {\n                  type: \"vector\",\n                  tiles: [\n                    \"https://gis-server.data.census.gov/arcgis/rest/services/Hosted/VT_2017_050_00_PY_D1/VectorTileServer/tile/{z}/{y}/{x}.pbf\"\n                  ]\n                },\n                \"source-layer\": \"County\",\n                paint: {\n                  \"fill-opacity\": 0.6,\n                  \"fill-color\": colorExpression\n                }\n              });\n            \n            });\n    }\n    render() {\n        return (\n            <div>\n                <div id=\"map\"></div>\n            </div>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}